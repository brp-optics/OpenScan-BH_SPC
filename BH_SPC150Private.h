#pragma once
#pragma pack(1)

#include "OpenScanDeviceLib.h"

#include <Spcm_def.h>

#include <Windows.h>

// The SPC_data_file_structure.h provided by BH at the time of this writing
// does not compile. We use a fixed copy, generated by the shell script
// fix-spc-data-file-structure-h.sh (which runs in Git Bash).
#include "SPC_data_file_structure_fixed.h"


// TODO Module number should not be hard-coded!
#define MODULE					 0

struct AcqPrivateData
{
	OScDev_Acquisition *acquisition;

	uint16_t *frameBuffer;
	size_t width;
	size_t height;
	uint64_t pixelTime;
	double cfd_value;
	double sync_value;
	double adc_value;
	double tac_value;

	CRITICAL_SECTION mutex;
	CONDITION_VARIABLE acquisitionFinishCondition;
	bool stopRequested;
	bool isRunning;  // true if FLIM detector is armed
	bool started;    // true only if user starts FLIM acquisition
	HANDLE thread;
	HANDLE readoutThread;
	HANDLE monitorThread;
	short streamHandle;

	bool wroteHeader;

	//FIFO params
	short fifo_type;
	unsigned long words_in_buf;
	unsigned short *buffer;
	short initVariableTyope;
	short firstWrite;
	char phot_fname[80];//TODO
};


struct BH_PrivateData
{
	short moduleNr;

	char flimFileName[OScDev_MAX_STR_LEN + 1]; // for saving the raw data to hard drive

	OScDev_Setting **settings;
	size_t settingCount;

	bool settingsChanged;

	bool flimStarted;   // actual FLIM acquitiion starts when True
	bool flimDone;
	bool monitoringFLIM;  // set to true by default to monitor FLIM parameters since the beginning
	uint32_t acqTime; //seconds

	struct AcqPrivateData acquisition;
};


static inline struct BH_PrivateData *GetData(OScDev_Device *device)
{
	return (struct BH_PrivateData *)OScDev_Device_GetImplData(device);
}

OScDev_Error BH_SPC150PrepareSettings(OScDev_Device *device);